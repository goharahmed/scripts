
loadmodule "sl.so"
loadmodule "ndb_redis.so"
#http://kamailio.org/docs/modules/4.2.x/modules/xhttp_rpc.html#idp973432
loadmodule "xhttp.so"
loadmodule "xhttp_rpc.so"

modparam("ndb_redis", "server", "name=srvN;addr=127.0.0.1;port=6379;db=1")
modparam("xhttp_rpc", "xhttp_rpc_root", "http_rpc")


route[AUTH] {
#!ifdef WITH_AUTH

#!ifdef WITH_ASTERISK
# do not auth traffic from Asterisk - trusted!
        if(route(FROMASTERISK)){
                return;
        }
#!endif

#!ifdef WITH_IPAUTH
        if((!is_method("REGISTER")) && allow_source_address())
        {
				# source IP allowed
                return;
        }
#!endif
        if (is_method("REGISTER") || from_uri==myself)
        {

#!ifdef WITH_ASTERISK
        if (!auth_check("$fd", "sip_peers", "1")) {
#!else
        if (!auth_check("$fd", "subscriber", "1")) {
#!endif
            auth_challenge("$fd", "0");
            exit;
        }

         if (is_method("REGISTER") ) {
			 
                 if($hdr(Expires) > 0) {
                       xlog("L_NOTICE","User $au REGISTER Authenticated UserStatus:Online Expiry:'$hdr(Expires)' Add to the Redis List\n");
                       $avp(domain_list) = "ONLINE:" + $fd;
                       redis_cmd("srvN", "SADD $avp(domain_list) $au", "r");
                 }
                 if ($hdr(Expires) == 0){
                       xlog("L_NOTICE","$User $au UN-REGISTER Authenticated UserStatus:Offline Expiry:'$hdr(Expires)' Remove from the Redis List\n");
                       $avp(domain_list) = "ONLINE:" + $fd;
                       redis_cmd("srvN", "SREM $avp(domain_list) $au", "r");
                 }
         }
		 
         if(!is_method("REGISTER|PUBLISH")){
                        consume_credentials();
         }
      }
	  
      if (from_uri!=myself && uri!=myself)
      {
            sl_send_reply("403","Not relaying");
            exit;
      }

#!endif
    return;
}


event_route[xhttp:request] {
        $var(xhttp_rpc_root) = $(hu{s.substr,0,9});
		
        xlog("L_NOTICE", "[$pr:$fU@$si:$sp]: xHTTP request detected, reply with data --------\n");
# Add any IP-AUTH here if required using permissions module, allow_source_address()
# 		if ()($var(xhttp_rpc_root) == "/http_rpc") && allow_source_address()){		
        if ($var(xhttp_rpc_root) == "/http_rpc"){
                dispatch_xhttp_rpc();
        }
}


